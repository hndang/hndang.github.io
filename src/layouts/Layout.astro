---
interface Props {
    title: string;
}

import GlobalStyle from '../components/GlobalStyles.astro';
import '../styles/global.css'

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="dark">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Welcome to Hoang's site" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1, minimum-scale=1"
        />
        <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body class="bg-anti_atomic_5 dark:bg-atomic_5 overflow-x-hidden">
        <slot name="header"/>
        <main>
            <div class="mx-6 sm:mx-12 xl:mx-[30vh] justify-center ">
                <slot />
            </div>
        </main>
    </body>
</html>



<script>
    var sidebar = document.querySelector("#sidebar") as HTMLElement;

    const navBar = document.querySelector("#sidebar") as HTMLElement;
    const observer = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                if (entry.target.id == "hero") {
                    navBar.classList.toggle("show", !entry.isIntersecting);
                }
            });
        },
        {
            threshold: 0.98,
        },
    );

    // Adding effects for control
    const hero = document.querySelector("#hero");
    if (hero) {
        observer.observe(hero);
    }
    console.log(sessionStorage.getItem("isDark"))
    let isDark = true
    let data = sessionStorage.getItem("isDark")
    if (data == null){
        isDark = true
    }else{
        isDark = data == "true"
    }

    console.log(`is dark is: ${isDark}`)
    if (!isDark && document.documentElement.classList.contains("dark")){
        document.documentElement.classList.remove("dark")
    }
        
</script>