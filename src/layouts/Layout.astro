---
import Sidebar from "../components/Sidebar.astro";
import Header from "../components/Header.astro";


interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Welcome to Hoang's site" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1, minimum-scale=1"
        />
        <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body class="bg-atomic_5 overflow-x-hidden">
        <Sidebar />
        <div class="mx-6 sm:mx-12 xl:mx-[30vh] justify-center ">
            <slot />
        </div>
    </body>
</html>



<script>
    var sidebar = document.querySelector("#sidebar") as HTMLElement;

    const navBar = document.querySelector("#sidebar") as HTMLElement;
    const observer = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                if (entry.target.id == "hero") {
                    navBar.classList.toggle("show", !entry.isIntersecting);
                }
            });
        },
        {
            threshold: 0.98,
        },
    );

    // Adding effects for control
    const hero = document.querySelector("#hero");
    if (hero) {
        observer.observe(hero);
    }
</script>



<style is:global>
    @keyframes slideInLeft {
        from {
            transform: translateY(200px);
        }

        to {
            transform: translateY(0);
        }
    }
    @keyframes slideInRight {
        from {
            transform: translateX(100%);
        }

        to {
            transform: translateX(0);
        }
    }

    .slideInAnimation {
        animation: slideInLeft 1s ease-in;
    }
    .slideInAnimationR {
        animation: slideInRight 1s ease-in;
    }



    .sb {
        opacity: 0;
        transform: translateY(200px);
        transition: 1s;
    }
    .sb.show {
        opacity: 1;
        transform: translateY(0);
    }

    body::-webkit-scrollbar {
        width: 0.5em;
        height: 0.5em;
    }

    body::-webkit-scrollbar-track {
        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    }

    body::-webkit-scrollbar-thumb {
        background-color: rgb(28, 25, 23,0.5);
    }

    @font-face {
        font-family: 'Quirlycues';
        src: url('/fonts/Quirlycues.ttf') format('ttf');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }

    @font-face {
        font-family: 'AiN';
        src: url('/fonts/Autumn in November.ttf') format('ttf');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }


    @keyframes moveDown {
        from {
            transform: translate3d(0, 0, 0);
            
        }

        to {
            transform:  translate3d(0, 100vh, 0);
           
        }
    }

    .moveDownAnimation {
        animation: moveDown 2s ease-in;
    }



    .dot {
        position: absolute;
        border-radius: 9999px;
        height: 2.5rem;
        width: 2.5rem;
        background-color: white;
        animation: moveDown 4s 1 ease-in;
        opacity: 1;
    }

    html { scroll-behavior: smooth; }
    * {
}
/* * {
    outline: 1px solid #f00 !important;
  } */
</style>